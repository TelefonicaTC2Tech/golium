# We intentionally use a limited set of linters.
# This configuration file is used with different version of golangci-lint to avoid regressions:
# the linters can change between version,
# their configuration may be not compatible or their reports can be different,
# and this can break some of our tests.
# Also, some linters are not relevant for the project (e.g. linters related to SQL).

version: "2"

linters:
  # We intentionally use a limited set of linters.
  # See the comment on top of this file.
  default: none
  enable:
    - bodyclose
    - depguard
    - dogsled
    - dupl
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - revive
    - goprintffuncname
    - gosec
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - nolintlint
    - rowserrcheck
    - staticcheck
    - unconvert
    - unparam
    - unused
    - whitespace

  # don't enable:
  # - asciicheck
  # - gochecknoglobals
  # - gocognit
  # - godot
  # - godox
  # - mnd
  # - err113
  # - nestif
  # - prealloc
  # - testpackage
  # - wsl

  settings:
    depguard:
      rules:
        logger:
          files:
            - $all
          allow:
            - github.com/sirupsen/logrus
          deny:
            - pkg: log$
              desc: use logrus
    dupl:
      threshold: 100
    funlen:
      lines: 100
      statements: 75
    goconst:
      min-len: 2
      min-occurrences: 2
    gocritic:
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
      disabled-checks:
        - dupImport # https://github.com/go-critic/go-critic/issues/845
        - ifElseChain
        - octalLiteral
        - wrapperFunc
        - hugeParam
    gocyclo:
      min-complexity: 15
    mnd:
      # don't include the "operation" and "assign"
      checks: 
        - argument
        - case
        - condition
        - return
    govet:
      enable: 
        - shadow
      settings:
        printf:
          funcs:
            - (github.com/golangci/golangci-lint/v2/pkg/logutils.Log).Infof
            - (github.com/golangci/golangci-lint/v2/pkg/logutils.Log).Warnf
            - (github.com/golangci/golangci-lint/v2/pkg/logutils.Log).Errorf
            - (github.com/golangci/golangci-lint/v2/pkg/logutils.Log).Fatalf
    lll:
      line-length: 100
    misspell:
      locale: US
      ignore-rules:
        - "marshalling"
        - "unmarshalling"
        - "marshalled"
        - "unmarshalled"
    nolintlint:
      allow-unused: false # report any unused nolint directives
      require-explanation: false # don't require an explanation for nolint directives
      require-specific: false # don't require nolint directives to be specific about which linter is being skipped

  exclusions:
    # Excluding configuration per-path, per-linter, per-text and per-source
    rules:
      - path: '_test\.go'
        linters:
          - mnd
      - path: 'steps\.go'
        linters:
          - funlen
          - lll
      # https://github.com/go-critic/go-critic/issues/926
      - text: 'unnecessaryDefer:'
        linters:
          - gocritic
    paths:
      - internal/cache

formatters:
  enable:
    - gofmt
    - goimports
  settings:
    goimports:
      local-prefixes:
        - github.com/golangci/golangci-lint
  exclusions: 
      paths:
      - internal/cache

output:
  formats: 
    checkstyle:
      path: 'golangci-report.xml'
    text:
      path: stdout
      color: true

run:
  timeout: 5m